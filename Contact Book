import tkinter as tk
import sqlite3

class ContactManager:
    def __init__(self, root):
        self.root = root
        self.contacts = []

        # Create database connection
        self.conn = sqlite3.connect("contacts.db")
        self.cursor = self.conn.cursor()

        # Create tables
        self.cursor.execute("CREATE TABLE IF NOT EXISTS contacts (name TEXT, phone_number TEXT, email TEXT, address TEXT)")
        self.conn.commit()

        # Create GUI components
        self.name_label = tk.Label(root, text="Name:")
        self.name_label.pack()
        self.name_entry = tk.Entry(root)
        self.name_entry.pack()

        self.phone_number_label = tk.Label(root, text="Phone Number:")
        self.phone_number_label.pack()
        self.phone_number_entry = tk.Entry(root)
        self.phone_number_entry.pack()

        self.email_label = tk.Label(root, text="Email:")
        self.email_label.pack()
        self.email_entry = tk.Entry(root)
        self.email_entry.pack()

        self.address_label = tk.Label(root, text="Address:")
        self.address_label.pack()
        self.address_entry = tk.Entry(root)
        self.address_entry.pack()

        self.add_button = tk.Button(root, text="Add Contact", command=self.add_contact)
        self.add_button.pack()

        self.view_button = tk.Button(root, text="View Contacts", command=self.view_contacts)
        self.view_button.pack()

        self.search_button = tk.Button(root, text="Search Contacts", command=self.search_contacts)
        self.search_button.pack()

    def add_contact(self):
        # Get user input
        name = self.name_entry.get()
        phone_number = self.phone_number_entry.get()
        email = self.email_entry.get()
        address = self.address_entry.get()

        # Validate input
        if not name or not phone_number:
            print("Please enter a name and phone number.")
            return

        # Add contact to database
        self.cursor.execute("INSERT INTO contacts (name, phone_number, email, address) VALUES (?,?,?,?)", (name, phone_number, email, address))
        self.conn.commit()

        # Clear input fields
        self.name_entry.delete(0, tk.END)
        self.phone_number_entry.delete(0, tk.END)
        self.email_entry.delete(0, tk.END)
        self.address_entry.delete(0, tk.END)
